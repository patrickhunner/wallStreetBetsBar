{"ast":null,"code":"var _jsxFileName = \"/home/pi/Documents/wallStreetBetsBar/client/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddTicker(props) {\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [\"Add Ticker:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: props.onChange,\n      value: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.onClick,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = AddTicker;\n\nclass StocksManager extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stocks: null,\n      addTicker: \"\"\n    };\n    this.handleTickerChange = this.handleTickerChange.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.updateStocks = this.updateStocks.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    fetch(\"/api\").then(resp => resp.json()).then(data => this.setState({\n      stocks: data.data.stocks\n    }));\n  }\n\n  onRemove(elm) {\n    this.setState({\n      stocks: this.state.stocks.filter(itm => itm !== elm)\n    }, this.updateStocks); //this.updateStocks();\n  }\n\n  handleAdd(event) {\n    this.setState({\n      stocks: this.state.stocks.concat([this.state.addTicker])\n    }, this.updateStocks);\n    this.setState({\n      addTicker: \"\"\n    }); //this.updateStocks();\n  }\n\n  handleTickerChange(event) {\n    this.setState({\n      addTicker: event.target.value\n    });\n  }\n\n  updateStocks() {\n    console.log(\"Updating Stocks\");\n    console.log(this.state.stocks);\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        mode: 'stocks',\n        data: {\n          stocks: this.state.stocks\n        }\n      })\n    };\n    fetch('/api', requestOptions).then(response => response.json()).then(data => this.setState({\n      postId: data.id\n    }));\n  }\n\n  render() {\n    if (this.state.stocks) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-container\",\n        children: [/*#__PURE__*/_jsxDEV(AddTicker, {\n          value: this.state.addTicker,\n          onChange: this.handleTickerChange,\n          onClick: this.handleAdd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.stocks.map(elm => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [elm, /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"rem-btn\",\n                onClick: () => this.onRemove(elm),\n                children: \"Remove\"\n              }, elm + \" btn\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)]\n            }, elm, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nfunction App() {\n  // const [data, setData] = React.useState(0)\n  // React.useEffect(() => {\n  //   fetch(\"/api\")\n  //     .then((resp) => resp.json())\n  //     .then((data) => setData(data.data.stocks[0]));\n  // })\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(StocksManager, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddTicker\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/pi/Documents/wallStreetBetsBar/client/src/App.js"],"names":["React","ReactDom","AddTicker","props","onChange","value","onClick","StocksManager","Component","constructor","state","stocks","addTicker","handleTickerChange","bind","handleAdd","updateStocks","componentDidMount","console","log","fetch","then","resp","json","data","setState","onRemove","elm","filter","itm","event","concat","target","requestOptions","method","headers","body","JSON","stringify","mode","response","postId","id","render","map","App"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport ReactDom from \"react-dom\";\n\nfunction AddTicker(props) {\n  return (\n    <label>\n      Add Ticker:\n      <input type=\"text\" onChange={props.onChange} value={props.value}></input>\n      <button onClick={props.onClick}>Add</button>\n    </label>\n  );\n}\n\nclass StocksManager extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stocks: null,\n      addTicker: \"\",\n    };\n\n    this.handleTickerChange = this.handleTickerChange.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.updateStocks = this.updateStocks.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    fetch(\"/api\")\n      .then((resp) => resp.json())\n      .then((data) => this.setState({stocks: data.data.stocks}));\n  }\n\n  onRemove(elm) {\n    this.setState({stocks: this.state.stocks.filter(itm => itm !== elm)}, this.updateStocks);\n    //this.updateStocks();\n  }\n\n  handleAdd(event) {\n    this.setState({stocks: this.state.stocks.concat([this.state.addTicker])}, this.updateStocks);\n    this.setState({addTicker: \"\"});\n    //this.updateStocks();\n  }\n\n  handleTickerChange(event) {\n    this.setState({addTicker: event.target.value});\n  }\n\n  updateStocks() {\n    console.log(\"Updating Stocks\");\n    console.log(this.state.stocks);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ mode: 'stocks', data: {stocks: this.state.stocks} })\n    };\n    fetch('/api', requestOptions)\n      .then(response => response.json())\n      .then(data => this.setState({ postId: data.id }));\n  }\n\n  render() {\n    if (this.state.stocks){\n      return (\n        <div className=\"stock-container\">\n          <AddTicker\n            value={this.state.addTicker}\n            onChange={this.handleTickerChange}\n            onClick={this.handleAdd}\n          />\n          <ul>\n            {\n              this.state.stocks.map((elm) => {\n                return (\n                <li key={elm}>\n                  {elm}\n                  <button className=\"rem-btn\" key={elm + \" btn\"} onClick={() => this.onRemove(elm)}>Remove</button>\n                </li>);\n              })\n            }\n          </ul>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"stock-container\">\n          <p>Loading...</p>\n        </div>\n      );\n    }\n  }\n}\n\nfunction App() {\n  // const [data, setData] = React.useState(0)\n\n  // React.useEffect(() => {\n  //   fetch(\"/api\")\n  //     .then((resp) => resp.json())\n  //     .then((data) => setData(data.data.stocks[0]));\n  // })\n\n  return (\n    <div className=\"App\">\n      <StocksManager />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}